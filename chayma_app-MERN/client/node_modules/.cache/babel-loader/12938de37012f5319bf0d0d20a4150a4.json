{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\ECommerce-MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\ECommerce-MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\ECommerce-MERN\\\\client\\\\src\\\\components\\\\UserDashboard\\\\Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport { isAuthenticated } from '../../helpers/authFetch';\nimport { getUser, updateUser, updateUserLocalStorage } from '../../helpers/user';\n\nconst Profile = ({\n  match\n}) => {\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: '',\n    success: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const name = values.name,\n        email = values.email,\n        password = values.password,\n        error = values.error,\n        success = values.success;\n\n  const _isAuthenticated = isAuthenticated(),\n        token = _isAuthenticated.token;\n\n  useEffect(() => {\n    getUser(match.params.userId, token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: true\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          name: data.name,\n          email: data.email\n        }));\n      }\n    }); // eslint-disable-next-line\n  }, []);\n\n  const handleChange = name => event => {\n    // console.log(event.target.value);\n    setValues(_objectSpread({}, values, {\n      error: false,\n      [name]: event.target.value\n    }));\n  };\n\n  const clickSubmit = event => {\n    event.preventDefault();\n    updateUser(match.params.userId, token, {\n      name,\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        alert(data.error);\n      } else {\n        updateUserLocalStorage(data, () => {\n          setValues(_objectSpread({}, values, {\n            name: data.name,\n            email: data.email,\n            success: true\n          }));\n        });\n      }\n    });\n  };\n\n  const showSuccess = success => React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Your profile has been updated successfully!\");\n\n  const showError = error => React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Fail to update your profile\");\n\n  const updateForm = () => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    onChange: handleChange('name'),\n    value: name,\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    defaultValue: email,\n    type: \"email\",\n    className: \"form-control\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    onChange: handleChange('password'),\n    value: password,\n    type: \"password\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary float-right\",\n    onClick: clickSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Update\")));\n\n  return React.createElement(\"div\", {\n    className: \"container w-50\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title m-3 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Profile update\"), showSuccess(success), showError(error), updateForm());\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Nouveau dossier (2)/ECommerce-MERN/client/src/components/UserDashboard/Profile.js"],"names":["React","useState","useEffect","isAuthenticated","getUser","updateUser","updateUserLocalStorage","Profile","match","name","email","password","error","success","values","setValues","token","params","userId","then","data","handleChange","event","target","value","clickSubmit","preventDefault","alert","showSuccess","display","showError","updateForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { isAuthenticated } from '../../helpers/authFetch';\nimport {\n  getUser,\n  updateUser,\n  updateUserLocalStorage\n} from '../../helpers/user';\n\nconst Profile = ({ match }) => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: '',\n    success: false\n  });\n\n  const { name, email, password, error, success } = values;\n  const { token } = isAuthenticated();\n  useEffect(() => {\n    getUser(match.params.userId, token).then(data => {\n      if (data.error) {\n        setValues({ ...values, error: true });\n      } else {\n        setValues({ ...values, name: data.name, email: data.email });\n      }\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const handleChange = name => event => {\n    // console.log(event.target.value);\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const clickSubmit = event => {\n    event.preventDefault();\n    updateUser(match.params.userId, token, { name, email, password }).then(\n      data => {\n        if (data.error) {\n          alert(data.error);\n        } else {\n          updateUserLocalStorage(data, () => {\n            setValues({\n              ...values,\n              name: data.name,\n              email: data.email,\n              success: true\n            });\n          });\n        }\n      }\n    );\n  };\n\n  const showSuccess = success => (\n    <div\n      className=\"alert alert-info\"\n      style={{ display: success ? '' : 'none' }}\n    >\n      Your profile has been updated successfully!\n    </div>\n  );\n\n  const showError = error => (\n    <div\n      className=\"alert alert-danger\"\n      style={{ display: error ? '' : 'none' }}\n    >\n      Fail to update your profile\n    </div>\n  );\n\n  const updateForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Name</label>\n        <input\n          onChange={handleChange('name')}\n          value={name}\n          type=\"text\"\n          className=\"form-control\"\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Email</label>\n        <input\n          defaultValue={email}\n          type=\"email\"\n          className=\"form-control\"\n          disabled\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Password</label>\n        <input\n          onChange={handleChange('password')}\n          value={password}\n          type=\"password\"\n          className=\"form-control\"\n        />\n      </div>\n\n      <div>\n        <button className=\"btn btn-primary float-right\" onClick={clickSubmit}>\n          Update\n        </button>\n      </div>\n    </form>\n  );\n\n  return (\n    <div className=\"container w-50\">\n      <h1 className=\"title m-3 text-center\">Profile update</h1>\n      {showSuccess(success)}\n      {showError(error)}\n      {updateForm()}\n    </div>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}