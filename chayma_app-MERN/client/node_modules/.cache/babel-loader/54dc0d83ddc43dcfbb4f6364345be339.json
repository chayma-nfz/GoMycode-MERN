{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\GoMycode-MERN\\\\client\\\\src\\\\PrivateRoutes\\\\AdminRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../helpers/authFetch';\n\nconst AdminRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => isAuthenticated() && isAuthenticated().user.role === 1 ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/',\n      state: {\n        from: props.location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}));\n\nexport default AdminRoute;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Nouveau dossier (2)/GoMycode-MERN/client/src/PrivateRoutes/AdminRoute.js"],"names":["React","Route","Redirect","isAuthenticated","AdminRoute","component","Component","rest","props","user","role","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,eAAT,QAAgC,sBAAhC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBACjB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACXL,eAAe,MAAMA,eAAe,GAAGM,IAAlB,CAAuBC,IAAvB,KAAgC,CAArD,gBACE,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,gBAGE,oBAAC,QAAD;AACE,IAAA,EAAE,EAAE;AACFG,MAAAA,QAAQ,EAAE,GADR;AAEFC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAFL,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAkBA,eAAeV,UAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../helpers/authFetch';\n\nconst AdminRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated() && isAuthenticated().user.role === 1 ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/',\n            state: { from: props.location }\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default AdminRoute;\n"]},"metadata":{},"sourceType":"module"}