{"ast":null,"code":"export const getUser = (userId, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const updateUser = (userId, token, user) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const updateUserLocalStorage = (user, next) => {\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('jwt')) {\n      let auth = JSON.parse(localStorage.getItem('jwt'));\n      auth.user = user;\n      localStorage.setItem('user', JSON.stringify(auth));\n      next();\n    }\n  }\n};\nexport const getPurchaseHistory = (userId, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/orders/by/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Nouveau dossier (2)/ECommerce-MERN/client/src/helpers/user.js"],"names":["getUser","userId","token","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","then","response","json","catch","err","console","log","updateUser","user","body","JSON","stringify","updateUserLocalStorage","next","window","localStorage","getItem","auth","parse","setItem","getPurchaseHistory"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACxC,SAAOC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,SAAQL,MAAO,EAAjD,EAAoD;AAC9DM,IAAAA,MAAM,EAAE,KADsD;AAE9DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,kBAFT;AAGPC,MAAAA,aAAa,EAAG,UAASR,KAAM;AAHxB;AAFqD,GAApD,CAAL,CAQJS,IARI,CAQCC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAVI,EAWJC,KAXI,CAWEC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAbI,CAAP;AAcD,CAfM;AAiBP,OAAO,MAAMG,UAAU,GAAG,CAACjB,MAAD,EAASC,KAAT,EAAgBiB,IAAhB,KAAyB;AACjD,SAAOhB,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,SAAQL,MAAO,EAAjD,EAAoD;AAC9DM,IAAAA,MAAM,EAAE,KADsD;AAE9DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,kBAFT;AAGPC,MAAAA,aAAa,EAAG,UAASR,KAAM;AAHxB,KAFqD;AAO9DkB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAPwD,GAApD,CAAL,CASJR,IATI,CASCC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAXI,EAYJC,KAZI,CAYEC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAdI,CAAP;AAeD,CAhBM;AAkBP,OAAO,MAAMQ,sBAAsB,GAAG,CAACJ,IAAD,EAAOK,IAAP,KAAgB;AACpD,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC/B,UAAIC,IAAI,GAAGP,IAAI,CAACQ,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAX;AACAC,MAAAA,IAAI,CAACT,IAAL,GAAYA,IAAZ;AACAO,MAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACC,SAAL,CAAeM,IAAf,CAA7B;AACAJ,MAAAA,IAAI;AACL;AACF;AACF,CATM;AAWP,OAAO,MAAMO,kBAAkB,GAAG,CAAC9B,MAAD,EAASC,KAAT,KAAmB;AACnD,SAAOC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,mBAAkBL,MAAO,EAA3D,EAA8D;AACxEM,IAAAA,MAAM,EAAE,KADgE;AAExEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,kBAFT;AAGPC,MAAAA,aAAa,EAAG,UAASR,KAAM;AAHxB;AAF+D,GAA9D,CAAL,CAQJS,IARI,CAQCC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAVI,EAWJC,KAXI,CAWEC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXT,CAAP;AAYD,CAbM","sourcesContent":["export const getUser = (userId, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const updateUser = (userId, token, user) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const updateUserLocalStorage = (user, next) => {\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('jwt')) {\n      let auth = JSON.parse(localStorage.getItem('jwt'));\n      auth.user = user;\n      localStorage.setItem('user', JSON.stringify(auth));\n      next();\n    }\n  }\n};\n\nexport const getPurchaseHistory = (userId, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/orders/by/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}