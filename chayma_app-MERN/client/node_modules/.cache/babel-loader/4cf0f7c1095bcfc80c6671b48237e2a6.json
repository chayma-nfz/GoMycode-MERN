{"ast":null,"code":"export var getUser=function getUser(userId,token){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/user/\").concat(userId),{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json',Authorization:\"Bearer \".concat(token)}}).then(function(response){return response.json();}).catch(function(err){console.log(err);});};export var updateUser=function updateUser(userId,token,user){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/user/\").concat(userId),{method:'PUT',headers:{Accept:'application/json','Content-Type':'application/json',Authorization:\"Bearer \".concat(token)},body:JSON.stringify(user)}).then(function(response){return response.json();}).catch(function(err){console.log(err);});};export var updateUserLocalStorage=function updateUserLocalStorage(user,next){if(typeof window!=='undefined'){if(localStorage.getItem('jwt')){var auth=JSON.parse(localStorage.getItem('jwt'));auth.user=user;localStorage.setItem('user',JSON.stringify(auth));next();}}};export var getPurchaseHistory=function getPurchaseHistory(userId,token){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/orders/by/user/\").concat(userId),{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json',Authorization:\"Bearer \".concat(token)}}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Nouveau dossier (2)/ECommerce-MERN/client/src/helpers/user.js"],"names":["getUser","userId","token","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","then","response","json","catch","err","console","log","updateUser","user","body","JSON","stringify","updateUserLocalStorage","next","window","localStorage","getItem","auth","parse","setItem","getPurchaseHistory"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,MAAD,CAASC,KAAT,CAAmB,CACxC,MAAOC,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,kBAA0CL,MAA1C,EAAoD,CAC9DM,MAAM,CAAE,KADsD,CAE9DC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAGPC,aAAa,kBAAYR,KAAZ,CAHN,CAFqD,CAApD,CAAL,CAQJS,IARI,CAQC,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAVI,EAWJC,KAXI,CAWE,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CAbI,CAAP,CAcD,CAfM,CAiBP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACjB,MAAD,CAASC,KAAT,CAAgBiB,IAAhB,CAAyB,CACjD,MAAOhB,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,kBAA0CL,MAA1C,EAAoD,CAC9DM,MAAM,CAAE,KADsD,CAE9DC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAGPC,aAAa,kBAAYR,KAAZ,CAHN,CAFqD,CAO9DkB,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAPwD,CAApD,CAAL,CASJR,IATI,CASC,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAXI,EAYJC,KAZI,CAYE,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CAdI,CAAP,CAeD,CAhBM,CAkBP,MAAO,IAAMQ,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACJ,IAAD,CAAOK,IAAP,CAAgB,CACpD,GAAI,MAAOC,CAAAA,MAAP,GAAkB,WAAtB,CAAmC,CACjC,GAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,CAAiC,CAC/B,GAAIC,CAAAA,IAAI,CAAGP,IAAI,CAACQ,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAX,CACAC,IAAI,CAACT,IAAL,CAAYA,IAAZ,CACAO,YAAY,CAACI,OAAb,CAAqB,MAArB,CAA6BT,IAAI,CAACC,SAAL,CAAeM,IAAf,CAA7B,EACAJ,IAAI,GACL,CACF,CACF,CATM,CAWP,MAAO,IAAMO,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAC9B,MAAD,CAASC,KAAT,CAAmB,CACnD,MAAOC,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,4BAAoDL,MAApD,EAA8D,CACxEM,MAAM,CAAE,KADgE,CAExEC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAGPC,aAAa,kBAAYR,KAAZ,CAHN,CAF+D,CAA9D,CAAL,CAQJS,IARI,CAQC,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAVI,EAWJC,KAXI,CAWE,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EAXL,CAAP,CAYD,CAbM","sourcesContent":["export const getUser = (userId, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const updateUser = (userId, token, user) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const updateUserLocalStorage = (user, next) => {\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('jwt')) {\n      let auth = JSON.parse(localStorage.getItem('jwt'));\n      auth.user = user;\n      localStorage.setItem('user', JSON.stringify(auth));\n      next();\n    }\n  }\n};\n\nexport const getPurchaseHistory = (userId, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/orders/by/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}