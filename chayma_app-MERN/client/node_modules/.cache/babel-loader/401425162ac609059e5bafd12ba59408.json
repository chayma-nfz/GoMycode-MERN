{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\ECommerce-MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\ECommerce-MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import jwt from'jsonwebtoken';import{resetPasswordFetch}from'../../helpers/authFetch';var ResetPage=function ResetPage(_ref){var match=_ref.match;var _useState=useState({name:'',token:'',newPassword:'',error:'',success:false}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];useEffect(function(){var token=match.params.token;var _jwt$decode=jwt.decode(token),name=_jwt$decode.name;if(token){setValues(_objectSpread({},values,{name:name,token:token}));}// eslint-disable-next-line\n},[]);var name=values.name,token=values.token,newPassword=values.newPassword,error=values.error,success=values.success;var handleChange=function handleChange(event){setValues(_objectSpread({},values,{newPassword:event.target.value}));};var clickSubmit=function clickSubmit(event){event.preventDefault();setValues(_objectSpread({},values,{error:false}));resetPasswordFetch({newPassword:newPassword,resetPasswordLink:token}).then(function(data){if(data.error){setValues(_objectSpread({},values,{error:data.error}));}else{setValues({newPassword:'',error:false,success:true});}});};var passwordResetForm=function passwordResetForm(){return React.createElement(\"form\",null,React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{className:\"text-muted\"},\"New Password\"),React.createElement(\"input\",{onChange:handleChange,name:\"password\",value:newPassword,type:\"password\",className:\"form-control\",required:true})),React.createElement(\"div\",null,React.createElement(\"button\",{className:\"btn btn-primary float-right\",onClick:clickSubmit},\"Submit\")));};var showError=function showError(){return React.createElement(\"div\",{className:\"alert alert-danger\",style:{display:error?'':'none'}},error);};var showSuccess=function showSuccess(){return React.createElement(\"div\",{className:\"alert alert-info\",style:{display:success?'':'none'}},\"Your password has been updated!\");};return React.createElement(\"div\",{className:\"container w-50\"},React.createElement(\"div\",{className:\"p-3 text-center\"},React.createElement(\"h1\",{className:\"title\"},\"Welcome back! \",name)),showError(),showSuccess(),passwordResetForm());};export default ResetPage;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Nouveau dossier (2)/ECommerce-MERN/client/src/components/ResetPage/ResetPage.js"],"names":["React","useState","useEffect","jwt","resetPasswordFetch","ResetPage","match","name","token","newPassword","error","success","values","setValues","params","decode","handleChange","event","target","value","clickSubmit","preventDefault","resetPasswordLink","then","data","passwordResetForm","showError","display","showSuccess"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { resetPasswordFetch } from '../../helpers/authFetch';\n\nconst ResetPage = ({ match }) => {\n  const [values, setValues] = useState({\n    name: '',\n    token: '',\n    newPassword: '',\n    error: '',\n    success: false\n  });\n\n  useEffect(() => {\n    let token = match.params.token;\n    let { name } = jwt.decode(token);\n    if (token) {\n      setValues({ ...values, name, token });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const { name, token, newPassword, error, success } = values;\n\n  const handleChange = event => {\n    setValues({ ...values, newPassword: event.target.value });\n  };\n\n  const clickSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false });\n    resetPasswordFetch({ newPassword, resetPasswordLink: token }).then(data => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({ newPassword: '', error: false, success: true });\n      }\n    });\n  };\n\n  const passwordResetForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">New Password</label>\n        <input\n          onChange={handleChange}\n          name=\"password\"\n          value={newPassword}\n          type=\"password\"\n          className=\"form-control\"\n          required\n        />\n      </div>\n\n      <div>\n        <button className=\"btn btn-primary float-right\" onClick={clickSubmit}>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n\n  const showError = () => (\n    <div\n      className=\"alert alert-danger\"\n      style={{ display: error ? '' : 'none' }}\n    >\n      {error}\n    </div>\n  );\n\n  const showSuccess = () => (\n    <div\n      className=\"alert alert-info\"\n      style={{ display: success ? '' : 'none' }}\n    >\n      Your password has been updated!\n    </div>\n  );\n\n  return (\n    <div className=\"container w-50\">\n      <div className=\"p-3 text-center\">\n        <h1 className=\"title\">Welcome back! {name}</h1>\n      </div>\n      {showError()}\n      {showSuccess()}\n      {passwordResetForm()}\n    </div>\n  );\n};\n\nexport default ResetPage;\n"]},"metadata":{},"sourceType":"module"}