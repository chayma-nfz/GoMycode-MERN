{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\GoMycode-MERN\\\\client\\\\src\\\\components\\\\AdminDashboard\\\\UpdateCategory.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { updateCategory, getCategory } from '../../helpers/adminFetch';\nimport { isAuthenticated } from '../../helpers/authFetch';\n\nconst UpdateCategory = ({\n  match\n}) => {\n  const [name, setName] = useState('');\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const {\n    user,\n    token\n  } = isAuthenticated();\n  useEffect(() => {\n    getCategory(match.params.categoryId).then(data => {\n      if (data.error) {\n        console.log(data.error);\n        setError(true);\n      } else {\n        setName(data.name);\n      }\n    }); // eslint-disable-next-line\n  }, []);\n\n  const handleChange = e => {\n    setError('');\n    setName(e.target.value);\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    setError('');\n    setSuccess(false); //request an API call\n\n    updateCategory(user._id, token, match.params.categoryId, {\n      name\n    }).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setError('');\n        setSuccess(true);\n      }\n    });\n  };\n\n  const newCategoryForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: clickSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Category Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    autoFocus: true,\n    value: name,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/dashboard\",\n    className: \"btn btn-outline-warning float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-primary float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Update\"));\n\n  const showSuccess = () => {\n    if (success) return /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }\n    }, name, \" is updated successfully!\");\n  };\n\n  const showError = () => {\n    if (error) return /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    }, error);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title m-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Update Category\"), showError(), showSuccess(), newCategoryForm());\n};\n\nexport default UpdateCategory;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Nouveau dossier (2)/GoMycode-MERN/client/src/components/AdminDashboard/UpdateCategory.js"],"names":["React","useState","useEffect","Link","updateCategory","getCategory","isAuthenticated","UpdateCategory","match","name","setName","error","setError","success","setSuccess","user","token","params","categoryId","then","data","console","log","handleChange","e","target","value","clickSubmit","preventDefault","_id","newCategoryForm","showSuccess","showError"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { updateCategory, getCategory } from '../../helpers/adminFetch';\nimport { isAuthenticated } from '../../helpers/authFetch';\n\nconst UpdateCategory = ({ match }) => {\n  const [name, setName] = useState('');\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const { user, token } = isAuthenticated();\n\n  useEffect(() => {\n    getCategory(match.params.categoryId).then(data => {\n      if (data.error) {\n        console.log(data.error);\n        setError(true);\n      } else {\n        setName(data.name);\n      }\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const handleChange = e => {\n    setError('');\n    setName(e.target.value);\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    setError('');\n    setSuccess(false);\n    //request an API call\n    updateCategory(user._id, token, match.params.categoryId, { name }).then(\n      data => {\n        if (data.error) {\n          setError(data.error);\n        } else {\n          setError('');\n          setSuccess(true);\n        }\n      }\n    );\n  };\n\n  const newCategoryForm = () => (\n    <form onSubmit={clickSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"\" className=\"text-muted\">\n          Category Name\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          autoFocus\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <Link\n        to=\"/admin/dashboard\"\n        className=\"btn btn-outline-warning float-left\"\n      >\n        Back\n      </Link>\n      <button className=\"btn btn-outline-primary float-right\">Update</button>\n    </form>\n  );\n\n  const showSuccess = () => {\n    if (success)\n      return <h3 className=\"text-success\">{name} is updated successfully!</h3>;\n  };\n\n  const showError = () => {\n    if (error) return <h3 className=\"text-danger\">{error}</h3>;\n  };\n\n  return (\n    <div className=\"container w-50\">\n      <h1 className=\"title m-3 text-center\">Update Category</h1>\n      {showError()}\n      {showSuccess()}\n      {newCategoryForm()}\n    </div>\n  );\n};\n\nexport default UpdateCategory;\n"]},"metadata":{},"sourceType":"module"}