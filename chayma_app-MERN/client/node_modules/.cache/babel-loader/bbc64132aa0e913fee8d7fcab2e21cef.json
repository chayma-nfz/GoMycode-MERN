{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\ECommerce-MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\ECommerce-MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\ECommerce-MERN\\\\client\\\\src\\\\components\\\\ResetPage\\\\ResetPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { resetPasswordFetch } from '../../helpers/authFetch';\n\nconst ResetPage = ({\n  match\n}) => {\n  const _useState = useState({\n    name: '',\n    token: '',\n    newPassword: '',\n    error: '',\n    success: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  useEffect(() => {\n    let token = match.params.token;\n\n    let _jwt$decode = jwt.decode(token),\n        name = _jwt$decode.name;\n\n    if (token) {\n      setValues(_objectSpread({}, values, {\n        name,\n        token\n      }));\n    } // eslint-disable-next-line\n\n  }, []);\n  const name = values.name,\n        token = values.token,\n        newPassword = values.newPassword,\n        error = values.error,\n        success = values.success;\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      newPassword: event.target.value\n    }));\n  };\n\n  const clickSubmit = event => {\n    event.preventDefault();\n    setValues(_objectSpread({}, values, {\n      error: false\n    }));\n    resetPasswordFetch({\n      newPassword,\n      resetPasswordLink: token\n    }).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues({\n          newPassword: '',\n          error: false,\n          success: true\n        });\n      }\n    });\n  };\n\n  const passwordResetForm = () => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"New Password\"), React.createElement(\"input\", {\n    onChange: handleChange,\n    name: \"password\",\n    value: newPassword,\n    type: \"password\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary float-right\",\n    onClick: clickSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Submit\")));\n\n  const showError = () => React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, error);\n\n  const showSuccess = () => React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Your password has been updated!\");\n\n  return React.createElement(\"div\", {\n    className: \"container w-50\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"p-3 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Welcome back! \", name)), showError(), showSuccess(), passwordResetForm());\n};\n\nexport default ResetPage;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Nouveau dossier (2)/ECommerce-MERN/client/src/components/ResetPage/ResetPage.js"],"names":["React","useState","useEffect","jwt","resetPasswordFetch","ResetPage","match","name","token","newPassword","error","success","values","setValues","params","decode","handleChange","event","target","value","clickSubmit","preventDefault","resetPasswordLink","then","data","passwordResetForm","showError","display","showSuccess"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,kBAAT,QAAmC,yBAAnC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA,oBACHL,QAAQ,CAAC;AACnCM,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,WAAW,EAAE,EAHsB;AAInCC,IAAAA,KAAK,EAAE,EAJ4B;AAKnCC,IAAAA,OAAO,EAAE;AAL0B,GAAD,CADL;AAAA;AAAA,QACxBC,MADwB;AAAA,QAChBC,SADgB;;AAS/BX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,KAAK,GAAGF,KAAK,CAACQ,MAAN,CAAaN,KAAzB;;AADc,sBAECL,GAAG,CAACY,MAAJ,CAAWP,KAAX,CAFD;AAAA,QAERD,IAFQ,eAERA,IAFQ;;AAGd,QAAIC,KAAJ,EAAW;AACTK,MAAAA,SAAS,mBAAMD,MAAN;AAAcL,QAAAA,IAAd;AAAoBC,QAAAA;AAApB,SAAT;AACD,KALa,CAMd;;AACD,GAPQ,EAON,EAPM,CAAT;AAT+B,QAkBvBD,IAlBuB,GAkBsBK,MAlBtB,CAkBvBL,IAlBuB;AAAA,QAkBjBC,KAlBiB,GAkBsBI,MAlBtB,CAkBjBJ,KAlBiB;AAAA,QAkBVC,WAlBU,GAkBsBG,MAlBtB,CAkBVH,WAlBU;AAAA,QAkBGC,KAlBH,GAkBsBE,MAlBtB,CAkBGF,KAlBH;AAAA,QAkBUC,OAlBV,GAkBsBC,MAlBtB,CAkBUD,OAlBV;;AAoB/B,QAAMK,YAAY,GAAGC,KAAK,IAAI;AAC5BJ,IAAAA,SAAS,mBAAMD,MAAN;AAAcH,MAAAA,WAAW,EAAEQ,KAAK,CAACC,MAAN,CAAaC;AAAxC,OAAT;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAGH,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACI,cAAN;AACAR,IAAAA,SAAS,mBAAMD,MAAN;AAAcF,MAAAA,KAAK,EAAE;AAArB,OAAT;AACAN,IAAAA,kBAAkB,CAAC;AAAEK,MAAAA,WAAF;AAAea,MAAAA,iBAAiB,EAAEd;AAAlC,KAAD,CAAlB,CAA8De,IAA9D,CAAmEC,IAAI,IAAI;AACzE,UAAIA,IAAI,CAACd,KAAT,EAAgB;AACdG,QAAAA,SAAS,mBAAMD,MAAN;AAAcF,UAAAA,KAAK,EAAEc,IAAI,CAACd;AAA1B,WAAT;AACD,OAFD,MAEO;AACLG,QAAAA,SAAS,CAAC;AAAEJ,UAAAA,WAAW,EAAE,EAAf;AAAmBC,UAAAA,KAAK,EAAE,KAA1B;AAAiCC,UAAAA,OAAO,EAAE;AAA1C,SAAD,CAAT;AACD;AACF,KAND;AAOD,GAVD;;AAYA,QAAMc,iBAAiB,GAAG,MACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,IAAA,QAAQ,EAAET,YADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEP,WAHT;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,SAAS,EAAC,cALZ;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,6BAAlB;AAAgD,IAAA,OAAO,EAAEW,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAbF,CADF;;AAsBA,QAAMM,SAAS,GAAG,MAChB;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAEjB,KAAK,GAAG,EAAH,GAAQ;AAAxB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGA,KAJH,CADF;;AASA,QAAMkB,WAAW,GAAG,MAClB;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,KAAK,EAAE;AAAED,MAAAA,OAAO,EAAEhB,OAAO,GAAG,EAAH,GAAQ;AAA1B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF;;AASA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqCJ,IAArC,CADF,CADF,EAIGmB,SAAS,EAJZ,EAKGE,WAAW,EALd,EAMGH,iBAAiB,EANpB,CADF;AAUD,CAtFD;;AAwFA,eAAepB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { resetPasswordFetch } from '../../helpers/authFetch';\n\nconst ResetPage = ({ match }) => {\n  const [values, setValues] = useState({\n    name: '',\n    token: '',\n    newPassword: '',\n    error: '',\n    success: false\n  });\n\n  useEffect(() => {\n    let token = match.params.token;\n    let { name } = jwt.decode(token);\n    if (token) {\n      setValues({ ...values, name, token });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const { name, token, newPassword, error, success } = values;\n\n  const handleChange = event => {\n    setValues({ ...values, newPassword: event.target.value });\n  };\n\n  const clickSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false });\n    resetPasswordFetch({ newPassword, resetPasswordLink: token }).then(data => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({ newPassword: '', error: false, success: true });\n      }\n    });\n  };\n\n  const passwordResetForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">New Password</label>\n        <input\n          onChange={handleChange}\n          name=\"password\"\n          value={newPassword}\n          type=\"password\"\n          className=\"form-control\"\n          required\n        />\n      </div>\n\n      <div>\n        <button className=\"btn btn-primary float-right\" onClick={clickSubmit}>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n\n  const showError = () => (\n    <div\n      className=\"alert alert-danger\"\n      style={{ display: error ? '' : 'none' }}\n    >\n      {error}\n    </div>\n  );\n\n  const showSuccess = () => (\n    <div\n      className=\"alert alert-info\"\n      style={{ display: success ? '' : 'none' }}\n    >\n      Your password has been updated!\n    </div>\n  );\n\n  return (\n    <div className=\"container w-50\">\n      <div className=\"p-3 text-center\">\n        <h1 className=\"title\">Welcome back! {name}</h1>\n      </div>\n      {showError()}\n      {showSuccess()}\n      {passwordResetForm()}\n    </div>\n  );\n};\n\nexport default ResetPage;\n"]},"metadata":{},"sourceType":"module"}