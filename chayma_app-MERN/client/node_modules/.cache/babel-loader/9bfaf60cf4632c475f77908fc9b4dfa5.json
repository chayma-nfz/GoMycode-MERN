{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\ECommerce-MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\ECommerce-MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\ECommerce-MERN\\\\client\\\\src\\\\components\\\\Cart\\\\Checkout.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport DropIn from 'braintree-web-drop-in-react'; //https://www.npmjs.com/package/braintree-web-drop-in-react\n\nimport { processPayment, getBraintreeClientToken, createOrder } from '../../helpers/userFetch';\nimport { isAuthenticated } from '../../helpers/authFetch';\nimport { emptyCart } from '../../helpers/cart';\n\nconst Checkout = ({\n  products,\n  setRender = f => f,\n  render = undefined\n}) => {\n  const _useState = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if (data.error) {\n        setData(_objectSpread({}, data, {\n          error: data.error\n        }));\n      } else {\n        setData({\n          clientToken: data.clientToken\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token); // eslint-disable-next-line\n  }, []);\n\n  const getTotal = () => {\n    return products.reduce((currentValue, nextValue) => {\n      return Math.round(currentValue + nextValue.count * nextValue.price);\n    }, 0);\n  };\n\n  const showCheckout = () => {\n    return isAuthenticated() ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, showDropIn()) : React.createElement(Link, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Sign in here\"));\n  };\n\n  const buy = () => {\n    setData({\n      loading: true\n    }); // send the nonce to your server\n    // nonce = data.instance.requestPaymentMethod()\n\n    let nonce; // eslint-disable-next-line\n\n    let getNonce = data.instance.requestPaymentMethod().then(res => {\n      // console.log(data);\n      nonce = res.nonce; // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n      // and also total to be charged\n      // console.log(\n      //     \"send nonce and total to process: \",\n      //     nonce,\n      //     getTotal(products)\n      // );\n\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getTotal(products)\n      };\n      processPayment(userId, token, paymentData).then(response => {\n        // console.log(response);\n        setData(_objectSpread({}, data, {\n          success: response.success\n        })); // create order\n\n        const createOrderData = {\n          products: products,\n          transaction_id: response.transaction.id,\n          amount: response.transaction.amount,\n          address: data.address\n        };\n        createOrder(userId, token, createOrderData); // empty cart\n\n        emptyCart(() => {\n          setRender(!render); // re-render localstorage\n\n          console.log('payment success and empty cart');\n          setData({\n            loading: false,\n            success: true\n          });\n        });\n      }).catch(error => {\n        console.log(error);\n        setData({\n          loading: false\n        });\n      });\n    }).catch(error => {\n      // console.log(\"dropin error: \", error);\n      setData(_objectSpread({}, data, {\n        error: error.message\n      }));\n    });\n  };\n\n  const handleAddress = e => {\n    setData(_objectSpread({}, data, {\n      address: e.target.value\n    }));\n  };\n\n  const showDropIn = () => React.createElement(\"div\", {\n    onBlur: () => setData(_objectSpread({}, data, {\n      error: ''\n    })),\n    className: \"w-50 m-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, data.clientToken !== null && products.length > 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Delivery Address:\"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    placeholder: \"Enter here\",\n    value: data.address,\n    onChange: handleAddress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(DropIn, {\n    options: {\n      authorization: data.clientToken,\n      paypal: {\n        flow: 'vault'\n      }\n    },\n    onInstance: instance => data.instance = instance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: buy,\n    className: \"btn btn-success btn-block pt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Pay\")) : null);\n\n  const showError = error => React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, error);\n\n  const showSuccess = success => React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Thanks! Your payment was successful!\");\n\n  const showLoading = loading => loading && React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"spinner-border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Loading...\")));\n\n  return React.createElement(\"div\", {\n    className: \"container-fluid \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Total: $\", getTotal()), showLoading(data.loading), showSuccess(data.success), showError(data.error), showCheckout());\n};\n\nexport default Checkout;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Nouveau dossier (2)/ECommerce-MERN/client/src/components/Cart/Checkout.js"],"names":["React","useState","useEffect","Link","DropIn","processPayment","getBraintreeClientToken","createOrder","isAuthenticated","emptyCart","Checkout","products","setRender","f","render","undefined","loading","success","clientToken","error","instance","address","data","setData","userId","user","_id","token","getToken","then","getTotal","reduce","currentValue","nextValue","Math","round","count","price","showCheckout","showDropIn","buy","nonce","getNonce","requestPaymentMethod","res","paymentData","paymentMethodNonce","amount","response","createOrderData","transaction_id","transaction","id","console","log","catch","message","handleAddress","e","target","value","length","authorization","paypal","flow","showError","display","showSuccess","showLoading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport DropIn from 'braintree-web-drop-in-react'; //https://www.npmjs.com/package/braintree-web-drop-in-react\nimport {\n  processPayment,\n  getBraintreeClientToken,\n  createOrder\n} from '../../helpers/userFetch';\nimport { isAuthenticated } from '../../helpers/authFetch';\nimport { emptyCart } from '../../helpers/cart';\n\nconst Checkout = ({ products, setRender = f => f, render = undefined }) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if (data.error) {\n        setData({ ...data, error: data.error });\n      } else {\n        setData({ clientToken: data.clientToken });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n    // eslint-disable-next-line\n  }, []);\n\n  const getTotal = () => {\n    return products.reduce((currentValue, nextValue) => {\n      return Math.round(currentValue + nextValue.count * nextValue.price);\n    }, 0);\n  };\n\n  const showCheckout = () => {\n    return isAuthenticated() ? (\n      <div>{showDropIn()}</div>\n    ) : (\n      <Link to=\"/signin\">\n        <button className=\"btn btn-primary\">Sign in here</button>\n      </Link>\n    );\n  };\n\n  const buy = () => {\n    setData({ loading: true });\n    // send the nonce to your server\n    // nonce = data.instance.requestPaymentMethod()\n    let nonce;\n    // eslint-disable-next-line\n    let getNonce = data.instance\n      .requestPaymentMethod()\n      .then(res => {\n        // console.log(data);\n        nonce = res.nonce;\n        // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n        // and also total to be charged\n        // console.log(\n        //     \"send nonce and total to process: \",\n        //     nonce,\n        //     getTotal(products)\n        // );\n        const paymentData = {\n          paymentMethodNonce: nonce,\n          amount: getTotal(products)\n        };\n\n        processPayment(userId, token, paymentData)\n          .then(response => {\n            // console.log(response);\n            setData({ ...data, success: response.success });\n            // create order\n            const createOrderData = {\n              products: products,\n              transaction_id: response.transaction.id,\n              amount: response.transaction.amount,\n              address: data.address\n            };\n            createOrder(userId, token, createOrderData);\n            // empty cart\n            emptyCart(() => {\n              setRender(!render); // re-render localstorage\n              console.log('payment success and empty cart');\n              setData({ loading: false, success: true });\n            });\n          })\n          .catch(error => {\n            console.log(error);\n            setData({ loading: false });\n          });\n      })\n      .catch(error => {\n        // console.log(\"dropin error: \", error);\n        setData({ ...data, error: error.message });\n      });\n  };\n\n  const handleAddress = e => {\n    setData({ ...data, address: e.target.value });\n  };\n  const showDropIn = () => (\n    <div onBlur={() => setData({ ...data, error: '' })} className=\"w-50 m-auto\">\n      {data.clientToken !== null && products.length > 0 ? (\n        <div>\n          <div className=\"form-group mb-3\">\n            <label className=\"text-muted\">Delivery Address:</label>\n            <textarea\n              className=\"form-control\"\n              placeholder=\"Enter here\"\n              value={data.address}\n              onChange={handleAddress}\n            />\n          </div>\n          <DropIn\n            options={{\n              authorization: data.clientToken,\n              paypal: {\n                flow: 'vault'\n              }\n            }}\n            onInstance={instance => (data.instance = instance)}\n          />\n          <button onClick={buy} className=\"btn btn-success btn-block pt-2\">\n            Pay\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n\n  const showError = error => (\n    <div\n      className=\"alert alert-danger\"\n      style={{ display: error ? '' : 'none' }}\n    >\n      {error}\n    </div>\n  );\n\n  const showSuccess = success => (\n    <div\n      className=\"alert alert-info\"\n      style={{ display: success ? '' : 'none' }}\n    >\n      Thanks! Your payment was successful!\n    </div>\n  );\n\n  const showLoading = loading =>\n    loading && (\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n\n  return (\n    <div className=\"container-fluid \">\n      <h2>Total: ${getTotal()}</h2>\n      {showLoading(data.loading)}\n      {showSuccess(data.success)}\n      {showError(data.error)}\n      {showCheckout()}\n    </div>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}