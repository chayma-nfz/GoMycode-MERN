{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\ECommerce-MERN\\\\client\\\\src\\\\components\\\\Shop\\\\Shop.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getCategories } from '../../helpers/adminFetch';\nimport { getFilteredProducts } from '../../helpers/userFetch';\nimport { defaultPrices } from './defaultPrices';\nimport Card from '../Home/Card';\nimport Checkbox from './Checkbox';\nimport RadioBox from './RadioButton';\n\nconst Shop = () => {\n  const [categories, setCategories] = useState([]);\n  const [myFilter, setMyFilter] = useState({\n    filters: {\n      category: [],\n      price: []\n    }\n  });\n  const [setError] = useState(false);\n  const [limit] = useState(6);\n  const [skip, setSkip] = useState(0);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [size, setSize] = useState(0); // console.log(myFilter.filters);\n\n  useEffect(() => {\n    //Get the categories from API\n    getCategories().then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        // console.log(data);\n        setCategories(data);\n      }\n    }); //Get the filtered products from API\n\n    getFilteredProducts(skip, limit, myFilter.filters).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setFilteredResults(data.data); //for Load More button, size from the API\n\n        setSize(data.size);\n        setSkip(0);\n      }\n    }); // eslint-disable-next-line\n  }, [myFilter]);\n\n  const loadMore = () => {\n    let toSkip = skip + limit;\n    getFilteredProducts(toSkip, limit, myFilter.filters).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setFilteredResults([...filteredResults, ...data.data]);\n        setSize(data.size);\n        setSkip(toSkip);\n      }\n    });\n  };\n\n  const loadMoreButton = () => {\n    return size > 0 && size >= limit && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: loadMore,\n      className: \"btn btn-primary mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Load more\");\n  };\n\n  const handleCategory = categoryIds => {\n    const newFilter = { ...myFilter\n    }; //push ids from checkbox component to the state\n\n    newFilter.filters['category'] = categoryIds;\n    setMyFilter(newFilter);\n  };\n\n  const handlePrice = priceId => {\n    let priceRange = []; // 1. loop over the keys in the defaultPrice and find the price range that match the id\n\n    for (let key in defaultPrices) {\n      if (defaultPrices[key]._id === parseInt(priceId)) {\n        priceRange = defaultPrices[key].array;\n      }\n    } // 2. set the price range in the existing filter\n\n\n    let myNewFilter = { ...myFilter\n    };\n    myFilter.filters['price'] = priceRange;\n    setMyFilter(myNewFilter);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Filter By \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid ml-0 row mark d-flex justify-content-center align-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    categories: categories,\n    handleFilters: categoryIds => handleCategory(categoryIds),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid ml-0 row  mark d-flex justify-content-center align-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RadioBox, {\n    prices: defaultPrices,\n    handleFilters: priceId => handlePrice(priceId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-3 card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, filteredResults.map((product, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 mb-3\",\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })))), loadMoreButton());\n};\n\nexport default Shop;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Nouveau dossier (2)/ECommerce-MERN/client/src/components/Shop/Shop.js"],"names":["React","useState","useEffect","getCategories","getFilteredProducts","defaultPrices","Card","Checkbox","RadioBox","Shop","categories","setCategories","myFilter","setMyFilter","filters","category","price","setError","limit","skip","setSkip","filteredResults","setFilteredResults","size","setSize","then","data","error","loadMore","toSkip","loadMoreButton","handleCategory","categoryIds","newFilter","handlePrice","priceId","priceRange","key","_id","parseInt","array","myNewFilter","map","product","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AACvCa,IAAAA,OAAO,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAE;AAAvB;AAD8B,GAAD,CAAxC;AAGA,QAAM,CAACC,QAAD,IAAahB,QAAQ,CAAC,KAAD,CAA3B;AACA,QAAM,CAACiB,KAAD,IAAUjB,QAAQ,CAAC,CAAD,CAAxB;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACoB,eAAD,EAAkBC,kBAAlB,IAAwCrB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,CAAD,CAAhC,CATiB,CAUjB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAC,IAAAA,aAAa,GAAGsB,IAAhB,CAAqBC,IAAI,IAAI;AAC3B,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACdV,QAAAA,QAAQ,CAACS,IAAI,CAACC,KAAN,CAAR;AACD,OAFD,MAEO;AACL;AACAhB,QAAAA,aAAa,CAACe,IAAD,CAAb;AACD;AACF,KAPD,EAFc,CAUd;;AACAtB,IAAAA,mBAAmB,CAACe,IAAD,EAAOD,KAAP,EAAcN,QAAQ,CAACE,OAAvB,CAAnB,CAAmDW,IAAnD,CAAwDC,IAAI,IAAI;AAC9D,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACdV,QAAAA,QAAQ,CAACS,IAAI,CAACC,KAAN,CAAR;AACD,OAFD,MAEO;AACLL,QAAAA,kBAAkB,CAACI,IAAI,CAACA,IAAN,CAAlB,CADK,CAEL;;AACAF,QAAAA,OAAO,CAACE,IAAI,CAACH,IAAN,CAAP;AACAH,QAAAA,OAAO,CAAC,CAAD,CAAP;AACD;AACF,KATD,EAXc,CAqBd;AACD,GAtBQ,EAsBN,CAACR,QAAD,CAtBM,CAAT;;AAwBA,QAAMgB,QAAQ,GAAG,MAAM;AACrB,QAAIC,MAAM,GAAGV,IAAI,GAAGD,KAApB;AACAd,IAAAA,mBAAmB,CAACyB,MAAD,EAASX,KAAT,EAAgBN,QAAQ,CAACE,OAAzB,CAAnB,CAAqDW,IAArD,CAA0DC,IAAI,IAAI;AAChE,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACdV,QAAAA,QAAQ,CAACS,IAAI,CAACC,KAAN,CAAR;AACD,OAFD,MAEO;AACLL,QAAAA,kBAAkB,CAAC,CAAC,GAAGD,eAAJ,EAAqB,GAAGK,IAAI,CAACA,IAA7B,CAAD,CAAlB;AACAF,QAAAA,OAAO,CAACE,IAAI,CAACH,IAAN,CAAP;AACAH,QAAAA,OAAO,CAACS,MAAD,CAAP;AACD;AACF,KARD;AASD,GAXD;;AAaA,QAAMC,cAAc,GAAG,MAAM;AAC3B,WACEP,IAAI,GAAG,CAAP,IACAA,IAAI,IAAIL,KADR,iBAEE;AAAQ,MAAA,OAAO,EAAEU,QAAjB;AAA2B,MAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ;AAQD,GATD;;AAWA,QAAMG,cAAc,GAAGC,WAAW,IAAI;AACpC,UAAMC,SAAS,GAAG,EAAE,GAAGrB;AAAL,KAAlB,CADoC,CAEpC;;AACAqB,IAAAA,SAAS,CAACnB,OAAV,CAAkB,UAAlB,IAAgCkB,WAAhC;AACAnB,IAAAA,WAAW,CAACoB,SAAD,CAAX;AACD,GALD;;AAOA,QAAMC,WAAW,GAAGC,OAAO,IAAI;AAC7B,QAAIC,UAAU,GAAG,EAAjB,CAD6B,CAE7B;;AACA,SAAK,IAAIC,GAAT,IAAgBhC,aAAhB,EAA+B;AAC7B,UAAIA,aAAa,CAACgC,GAAD,CAAb,CAAmBC,GAAnB,KAA2BC,QAAQ,CAACJ,OAAD,CAAvC,EAAkD;AAChDC,QAAAA,UAAU,GAAG/B,aAAa,CAACgC,GAAD,CAAb,CAAmBG,KAAhC;AACD;AACF,KAP4B,CAQ7B;;;AACA,QAAIC,WAAW,GAAG,EAAE,GAAG7B;AAAL,KAAlB;AACAA,IAAAA,QAAQ,CAACE,OAAT,CAAiB,OAAjB,IAA4BsB,UAA5B;AACAvB,IAAAA,WAAW,CAAC4B,WAAD,CAAX;AACD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,kFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAE/B,UADd;AAEE,IAAA,aAAa,EAAEsB,WAAW,IAAID,cAAc,CAACC,WAAD,CAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,eAWE;AAAK,IAAA,SAAS,EAAC,mFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAE3B,aADV;AAEE,IAAA,aAAa,EAAE8B,OAAO,IAAID,WAAW,CAACC,OAAD,CAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,eAkBE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,eAAe,CAACqB,GAAhB,CAAoB,CAACC,OAAD,EAAUC,CAAV,kBACnB;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEA,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAED,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CAlBF,EAyBGb,cAAc,EAzBjB,CADF;AA6BD,CA9GD;;AAiHA,eAAerB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getCategories } from '../../helpers/adminFetch';\nimport { getFilteredProducts } from '../../helpers/userFetch';\nimport { defaultPrices } from './defaultPrices';\n\nimport Card from '../Home/Card';\nimport Checkbox from './Checkbox';\nimport RadioBox from './RadioButton';\n\nconst Shop = () => {\n  const [categories, setCategories] = useState([]);\n  const [myFilter, setMyFilter] = useState({\n    filters: { category: [], price: [] }\n  });\n  const [setError] = useState(false);\n  const [limit] = useState(6);\n  const [skip, setSkip] = useState(0);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [size, setSize] = useState(0);\n  // console.log(myFilter.filters);\n\n  useEffect(() => {\n    //Get the categories from API\n    getCategories().then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        // console.log(data);\n        setCategories(data);\n      }\n    });\n    //Get the filtered products from API\n    getFilteredProducts(skip, limit, myFilter.filters).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setFilteredResults(data.data);\n        //for Load More button, size from the API\n        setSize(data.size);\n        setSkip(0);\n      }\n    });\n    // eslint-disable-next-line\n  }, [myFilter]);\n\n  const loadMore = () => {\n    let toSkip = skip + limit;\n    getFilteredProducts(toSkip, limit, myFilter.filters).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setFilteredResults([...filteredResults, ...data.data]);\n        setSize(data.size);\n        setSkip(toSkip);\n      }\n    });\n  };\n\n  const loadMoreButton = () => {\n    return (\n      size > 0 &&\n      size >= limit && (\n        <button onClick={loadMore} className=\"btn btn-primary mb-5\">\n          Load more\n        </button>\n      )\n    );\n  };\n\n  const handleCategory = categoryIds => {\n    const newFilter = { ...myFilter };\n    //push ids from checkbox component to the state\n    newFilter.filters['category'] = categoryIds;\n    setMyFilter(newFilter);\n  };\n\n  const handlePrice = priceId => {\n    let priceRange = [];\n    // 1. loop over the keys in the defaultPrice and find the price range that match the id\n    for (let key in defaultPrices) {\n      if (defaultPrices[key]._id === parseInt(priceId)) {\n        priceRange = defaultPrices[key].array;\n      }\n    }\n    // 2. set the price range in the existing filter\n    let myNewFilter = { ...myFilter };\n    myFilter.filters['price'] = priceRange;\n    setMyFilter(myNewFilter);\n  };\n\n  return (\n    <div className=\"text-center\">\n      <div className=\"m-3\">\n        <h1 className=\"title\">Filter By </h1>\n      </div>\n\n      <div className=\"container-fluid ml-0 row mark d-flex justify-content-center align-content-center\">\n        <Checkbox\n          categories={categories}\n          handleFilters={categoryIds => handleCategory(categoryIds)}\n        />\n      </div>\n      <div className=\"container-fluid ml-0 row  mark d-flex justify-content-center align-content-center\">\n        <RadioBox\n          prices={defaultPrices}\n          handleFilters={priceId => handlePrice(priceId)}\n        />\n      </div>\n\n      <div className=\"row m-3 card-container\">\n        {filteredResults.map((product, i) => (\n          <div className=\"col-4 mb-3\" key={i}>\n            <Card product={product} />\n          </div>\n        ))}\n      </div>\n      {loadMoreButton()}\n    </div>\n  );\n};\n\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}