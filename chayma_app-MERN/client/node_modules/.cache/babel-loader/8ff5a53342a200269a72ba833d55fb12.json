{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Nouveau dossier (2)\\\\GoMycode-MERN\\\\client\\\\src\\\\components\\\\Home\\\\Card.js\";\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Images from './Images';\nimport moment from 'moment';\nimport { addItem, updateItem, removeItem } from '../../helpers/cart';\n\nconst Card = ({\n  product,\n  showViewButton = true,\n  showAddToCartButton = true,\n  cartUpdate = false,\n  showRemoveProductButton = false,\n  setRender = f => f,\n  render = undefined\n}) => {\n  const [count, setCount] = useState(1);\n  const [redirect, setRedirect] = useState(false);\n\n  const showViewProductButton = showViewButton => {\n    return showViewButton && /*#__PURE__*/React.createElement(Link, {\n      to: `/product/${product._id}`,\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-primary mt-2 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"View\"));\n  };\n\n  const showStock = quantity => {\n    return quantity > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-primary badge-pill mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, \"In Stock\") : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-primary badge-pill mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, \"Out of Stock\");\n  }; // Add to cart functionality\n\n\n  const addToCart = () => {\n    addItem(product, () => {\n      setRedirect(true);\n    });\n  };\n\n  const shouldRedirect = redirect => {\n    if (redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/cart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  const showAddToCart = showAddToCartButton => {\n    return showAddToCartButton && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success mt-2 mb-2\",\n      onClick: addToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Add to cart\");\n  }; //Remove item from cart functionality\n\n\n  const showRemoveButton = showRemoveProductButton => {\n    return showRemoveProductButton && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger mt-2 mb-2\",\n      onClick: () => {\n        removeItem(product._id, () => setRedirect(true));\n        setRender(!render); //re-render setItem in localstorage\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Remove\");\n  }; // update cart functionality\n\n\n  const handleChange = productId => e => {\n    setRender(!render); //re-render setItem in localstorage\n\n    setCount(e.target.value < 1 ? 1 : e.target.value);\n\n    if (e.target.value >= 1) {\n      updateItem(productId, e.target.value);\n    }\n  };\n\n  const showCartUpdateOptions = cartUpdate => {\n    return cartUpdate && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Quantity\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      className: \"form-control\",\n      value: count,\n      onChange: handleChange(product._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card h-100 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, product.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, shouldRedirect(redirect), /*#__PURE__*/React.createElement(Images, {\n    item: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, product.description.substring(0, 50)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"$\", product.price), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Category: \", product.category && product.category.name), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Added \", moment(product.createdAt).fromNow()), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, showStock(product.quantity)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, showViewProductButton(showViewButton), showAddToCart(showAddToCartButton), showRemoveButton(showRemoveProductButton)), showCartUpdateOptions(cartUpdate)));\n};\n\nexport default Card;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Nouveau dossier (2)/GoMycode-MERN/client/src/components/Home/Card.js"],"names":["React","useState","Link","Redirect","Images","moment","addItem","updateItem","removeItem","Card","product","showViewButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRender","f","render","undefined","count","setCount","redirect","setRedirect","showViewProductButton","_id","showStock","quantity","addToCart","shouldRedirect","showAddToCart","showRemoveButton","handleChange","productId","e","target","value","showCartUpdateOptions","name","description","substring","price","category","createdAt","fromNow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Images from './Images';\nimport moment from 'moment';\nimport { addItem, updateItem, removeItem } from '../../helpers/cart';\n\nconst Card = ({\n  product,\n  showViewButton = true,\n  showAddToCartButton = true,\n  cartUpdate = false,\n  showRemoveProductButton = false,\n  setRender = f => f,\n  render = undefined\n}) => {\n  const [count, setCount] = useState(1);\n  const [redirect, setRedirect] = useState(false);\n\n  const showViewProductButton = showViewButton => {\n    return (\n      showViewButton && (\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\n          <button className=\"btn btn-outline-primary mt-2 mb-2\">View</button>\n        </Link>\n      )\n    );\n  };\n  const showStock = quantity => {\n    return quantity > 0 ? (\n      <span className=\"badge badge-primary badge-pill mb-2\">In Stock</span>\n    ) : (\n      <span className=\"badge badge-primary badge-pill mb-2\">Out of Stock</span>\n    );\n  };\n\n  // Add to cart functionality\n  const addToCart = () => {\n    addItem(product, () => {\n      setRedirect(true);\n    });\n  };\n\n  const shouldRedirect = redirect => {\n    if (redirect) {\n      return <Redirect to=\"/cart\" />;\n    }\n  };\n\n  const showAddToCart = showAddToCartButton => {\n    return (\n      showAddToCartButton && (\n        <button\n          className=\"btn btn-outline-success mt-2 mb-2\"\n          onClick={addToCart}\n        >\n          Add to cart\n        </button>\n      )\n    );\n  };\n  //Remove item from cart functionality\n  const showRemoveButton = showRemoveProductButton => {\n    return (\n      showRemoveProductButton && (\n        <button\n          className=\"btn btn-outline-danger mt-2 mb-2\"\n          onClick={() => {\n            removeItem(product._id, () => setRedirect(true));\n            setRender(!render); //re-render setItem in localstorage\n          }}\n        >\n          Remove\n        </button>\n      )\n    );\n  };\n\n  // update cart functionality\n\n  const handleChange = productId => e => {\n    setRender(!render); //re-render setItem in localstorage\n    setCount(e.target.value < 1 ? 1 : e.target.value);\n    if (e.target.value >= 1) {\n      updateItem(productId, e.target.value);\n    }\n  };\n\n  const showCartUpdateOptions = cartUpdate => {\n    return (\n      cartUpdate && (\n        <div className=\"input-group mt-1\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Quantity</span>\n          </div>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            value={count}\n            onChange={handleChange(product._id)}\n          />\n        </div>\n      )\n    );\n  };\n\n  return (\n    <div className=\"card h-100 text-center\">\n      <div className=\"card-header\">{product.name}</div>\n      <div className=\"card-image\">\n        {shouldRedirect(redirect)}\n        <Images item={product} />\n      </div>\n      <div className=\"column card-body\">\n        <p>{product.description.substring(0, 50)}</p>\n        <hr />\n        <h5>${product.price}</h5>\n        <hr />\n        <p>Category: {product.category && product.category.name}</p>\n        <hr />\n        <p>Added {moment(product.createdAt).fromNow()}</p>\n\n        <div>{showStock(product.quantity)}</div>\n        <div>\n          {showViewProductButton(showViewButton)}\n\n          {showAddToCart(showAddToCartButton)}\n\n          {showRemoveButton(showRemoveProductButton)}\n        </div>\n        {showCartUpdateOptions(cartUpdate)}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}